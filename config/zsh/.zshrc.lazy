# Aliases
alias ll='ls -al'
alias v='nvim'
alias t='tig'
alias ta='tig --all'
alias g='git'
alias ga='git_add'
alias gb='git branch'
alias gc='git commit'
alias gd='git diff'
alias gp='git pull'
alias gpu='git push'
alias gs='git status'
alias gsw='git switch'
alias gre='git restore'
alias gr='git rebase'
alias grc='git rebase --continue'
alias gra='git rebase --abort'
alias grs='git rebase --skip'
alias gr1='git rebase -i HEAD~'
alias gr2='git rebase -i HEAD~~'
alias gr3='git rebase -i HEAD~~~'
alias gr4='git rebase -i HEAD~~~~'
alias gr5='git rebase -i HEAD~~~~~'

# Load plugins and bindkey settings
zinit wait lucid light-mode for \
    zsh-users/zsh-autosuggestions \
    zdharma/fast-syntax-highlighting \
    zdharma/history-search-multi-word \
    b4b4r07/enhancd \
    zsh-users/zsh-completions

zinit ice wait lucid from"gh-r" as"program"
zinit light junegunn/fzf-bin

zinit ice wait lucid as"program" pick"$ZPFX/bin/git-*" make"PREFIX=$ZPFX"
zinit light tj/git-extras

zinit ice wait lucid atclone"dircolors -b LS_COLORS > c.zsh" atpull'%atclone' pick"c.zsh" nocompile'!'
zinit light trapd00r/LS_COLORS

autoload -Uz compinit && compinit -u
zstyle ':completion:*:default' menu select=2
zstyle ':completion:*:default' list-colors "${(s.:.)LS_COLORS}"
zinit light zsh-users/zaw

unalias zi
eval "$(zoxide init zsh)"

function git_status {
    echo "git status"
    git status -sb
    zle reset-prompt
}
zle -N git_status

function open_vscode {
    local file
    file=$(find . -type f -not -path "*/.git/*" | fzf --preview "(pygmentize {} ||
        cat {}) &> /dev/null | head -200")
    if [[ -n "${file}" ]]; then
        code "${file}"
        echo "code ${file}"
    fi
    zle reset-prompt
}
zle -N open_vscode

function git_add {
   local file
   file=$(unbuffer git status -s | fzf -m --ansi --preview="echo {} | awk '{print \$2}' | xargs git diff --color" | awk '{print $2}')
   if [[ -n "$file" ]]; then
        file=$(tr '\n' ' ' <<< "$file" | sed 's/^\s*\|\s*$//g')
        echo "git add ${file}"
        git add "${file}"
        echo "git status -sb"
        git status -sb
    fi
}

function up_directory {
    zle push-line
    echo "cd .."
    builtin cd .. || exit
    zle accept-line
}
zle -N up_directory

function down_directory {
    local directory
    directory=$(find . -mindepth 1 -maxdepth 1 -type d -not -name ".git" | fzf --select-1 --exit-0)
    if [[ -e "${directory}" ]]; then
        zle push-line
        echo "cd ${directory}"
        builtin cd "${directory}" || exit
        zle accept-line
    fi
}
zle -N down_directory

typeset -g -A key
key[PageDown]="${terminfo[knp]}"
key[PageUp]="${terminfo[kpp]}"
[[ -n "${key[PageDown]}" ]] && bindkey -- "${key[PageDown]}" down_directory
[[ -n "${key[PageUp]}" ]] && bindkey -- "${key[PageUp]}" up_directory

bindkey '^o' open_vscode
bindkey '^r' zaw-history
bindkey '^g' zaw-git-branches
bindkey '^v' git_status
bindkey '^f' forward-word
bindkey '^b' backward-word
bindkey '^y' kill-word
bindkey '^h' backward-kill-word

autoload -U select-word-style
select-word-style bash
